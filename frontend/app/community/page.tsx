// Trang c·ªông ƒë·ªìng - n∆°i ng∆∞·ªùi d√πng t√¨m ki·∫øm v√† tham gia c√°c ho·∫°t ƒë·ªông th·ªÉ thao
"use client"

import { useState, useEffect } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Plus } from "lucide-react"
import CommunitySearchFilters from "@/components/community/CommunitySearchFilters"
import CommunityPostCard from "@/components/community/CommunityPostCard"
import { getCommunityPosts } from "@/services/api"
import { CommunityPost } from "@/types"

export default function CommunityPage() {
  // State qu·∫£n l√Ω b·ªô l·ªçc t√¨m ki·∫øm
  const [searchQuery, setSearchQuery] = useState("")
  const [selectedSport, setSelectedSport] = useState("T·∫•t c·∫£")
  const [selectedDistance, setSelectedDistance] = useState("T·∫•t c·∫£")

  // State qu·∫£n l√Ω d·ªØ li·ªáu b√†i vi·∫øt
  const [posts, setPosts] = useState<CommunityPost[]>([])
  const [loading, setLoading] = useState(true)
  const [filteredPosts, setFilteredPosts] = useState<CommunityPost[]>([])

  // useEffect ƒë·ªÉ fetch d·ªØ li·ªáu b√†i vi·∫øt khi component mount
  useEffect(() => {
    const fetchPosts = async () => {
      try {
        const postsData = await getCommunityPosts()
        setPosts(postsData)
        setFilteredPosts(postsData) // Kh·ªüi t·∫°o filtered posts
      } catch (error) {
        console.error('Error fetching community posts:', error)
      } finally {
        setLoading(false)
      }
    }

    fetchPosts()
  }, [])

  // useEffect ƒë·ªÉ l·ªçc b√†i vi·∫øt khi c√°c filter thay ƒë·ªïi
  useEffect(() => {
    let filtered = posts

    // L·ªçc theo t·ª´ kh√≥a t√¨m ki·∫øm
    if (searchQuery.trim()) {
      filtered = filtered.filter(post =>
        post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        post.content.toLowerCase().includes(searchQuery.toLowerCase()) ||
        post.sport.toLowerCase().includes(searchQuery.toLowerCase())
      )
    }

    // L·ªçc theo m√¥n th·ªÉ thao
    if (selectedSport !== "T·∫•t c·∫£") {
      filtered = filtered.filter(post => post.sport === selectedSport)
    }

    // L·ªçc theo kho·∫£ng c√°ch (t·∫°m th·ªùi mock - trong th·ª±c t·∫ø s·∫Ω t√≠nh to√°n v·ªõi GPS)
    // if (selectedDistance !== "T·∫•t c·∫£") {
    //   // Logic l·ªçc theo kho·∫£ng c√°ch s·∫Ω ƒë∆∞·ª£c implement khi c√≥ API th·ª±c
    // }

    setFilteredPosts(filtered)
  }, [searchQuery, selectedSport, selectedDistance, posts])

  // X·ª≠ l√Ω like b√†i vi·∫øt
  const handleLike = (postId: string) => {
    setPosts(currentPosts =>
      currentPosts.map(post =>
        post.id === postId
          ? { ...post, likes: post.likes + 1 }
          : post
      )
    )
  }

  // X·ª≠ l√Ω comment b√†i vi·∫øt
  const handleComment = (postId: string) => {
    // Navigate ƒë·∫øn trang chi ti·∫øt ho·∫∑c m·ªü modal comment
    console.log('Comment on post:', postId)
  }

  // X·ª≠ l√Ω tham gia ho·∫°t ƒë·ªông
  const handleJoin = (postId: string) => {
    // G·ªçi API ƒë·ªÉ tham gia ho·∫°t ƒë·ªông
    console.log('Join activity:', postId)
    // C√≥ th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng participants ho·∫∑c navigate ƒë·∫øn chat
  }

  // Hi·ªÉn th·ªã loading state
  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4"></div>
          <p className="text-gray-600">ƒêang t·∫£i b√†i vi·∫øt...</p>
        </div>
      </div>
    )
  }
  // Render giao di·ªán ch√≠nh
  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8 max-w-4xl">
        {/* B·ªô l·ªçc t√¨m ki·∫øm */}
        <CommunitySearchFilters
          searchQuery={searchQuery}
          selectedSport={selectedSport}
          selectedDistance={selectedDistance}
          onSearchQueryChange={setSearchQuery}
          onSportChange={setSelectedSport}
          onDistanceChange={setSelectedDistance}
        />

        {/* Danh s√°ch b√†i vi·∫øt */}
        <div className="space-y-4">
          {filteredPosts.map((post) => (
            <CommunityPostCard
              key={post.id}
              post={post}
              onLike={handleLike}
              onComment={handleComment}
              onJoin={handleJoin}
            />
          ))}
        </div>

        {/* Hi·ªÉn th·ªã message khi kh√¥ng c√≥ b√†i vi·∫øt */}
        {filteredPosts.length === 0 && (
          <div className="text-center py-12">
            <div className="text-gray-400 text-6xl mb-4">üèÜ</div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o
            </h3>
            <p className="text-gray-600 mb-6">
              Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·∫°o m·ªôt b√†i vi·∫øt m·ªõi!
            </p>
          </div>
        )}

        {/* N√∫t t·∫°o b√†i vi·∫øt m·ªõi - floating action button */}
        <div className="fixed bottom-6 right-6">
          <Link href="/community/create">
            <Button className="bg-green-600 hover:bg-green-700 rounded-full w-16 h-16 shadow-lg">
              <Plus className="w-6 h-6" />
            </Button>
          </Link>
        </div>
      </div>
    </div>
  )
}
